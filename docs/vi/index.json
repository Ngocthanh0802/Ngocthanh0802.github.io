[{"uri":"/vi/","title":"T·∫£i l√™n v√† t·∫£i xu·ªëng h√¨nh ·∫£nh v·ªõi S3","tags":[],"description":"","content":"L√†m vi·ªác v·ªõi Amazon S3, Lambda v√† API Gateway ƒë·ªÉ t·∫£i l√™n v√† t·∫£i xu·ªëng h√¨nh ·∫£nh T·ªïng quan Trong b√†i lab n√†y, b·∫°n s·∫Ω t√¨m hi·ªÉu c√°c kh√°i ni·ªám c∆° b·∫£n v√† th·ª±c h√†nh v·ªõi Amazon S3, Lambda v√† API Gateway ƒë·ªÉ tri·ªÉn khai h·ªá th·ªëng t·∫£i l√™n v√† t·∫£i xu·ªëng h√¨nh ·∫£nh. B√†i lab h∆∞·ªõng d·∫´n c√°ch upload h√¨nh ·∫£nh l√™n S3 v√† truy xu·∫•t l·∫°i, th√¥ng qua API Gateway v√† AWS Lambda, v√† ƒë∆∞·ª£c ki·ªÉm th·ª≠ b·∫±ng Postman.\nN·ªôi dung ch√≠nh Gi·ªõi thi·ªáu C√°c b∆∞·ªõc chu·∫©n b·ªã T·∫°o Lambda Function ƒë·ªÉ x·ª≠ l√Ω upload/download C·∫•u h√¨nh API Gateway ƒë·ªÉ t√≠ch h·ª£p Ki·ªÉm th·ª≠ API b·∫±ng Postman D·ªçn d·∫πp t√†i nguy√™n "},{"uri":"/vi/4-s3log/4.1-updateiamrole/","title":"C·∫•u h√¨nh API Gateway ƒë·ªÉ K·∫øt n·ªëi v·ªõi Lambda","tags":[],"description":"","content":" C·∫•u H√¨nh Ch·ªçn API ·ªü thanh ch·ª©c nƒÉng b√™n tr√°i T·∫°i trang c·∫•u h√¨nh cho API ch√∫ng ta t·∫°o , truy c·∫≠p v√†o Resources\nTi·∫øn h√†nh Create resources\nResource name : files\nCu·ªëi l√† Create reosources Sau ƒë√≥ s·∫Ω tr·∫£ v·ªÅ l·∫°i giao di·ªán Resources v√† th√¥ng b√°o t·∫°o th√†nh c√¥ng\nCh·ªçn /files ‚Üí Actions ‚Üí Create Method ‚Üí ch·ªçn POST ‚Üí nh·∫•n tick xanh C·∫•u h√¨nh:\nIntegration type: Lambda Function\nUse Lambda Proxy integration: B·∫¨T\nLambda Region: us-east-1\nLambda Function: ch·ªçn uploadImageToS3\nNh·∫•n Create Method L√†m t∆∞∆°ng t·ª± v·ªõi download function Deploy API Tr√™n thanh menu Actions ‚Üí ch·ªçn Deploy API T·∫°o m·ªôt Stage m·ªõi: Stage name: dev Nh·∫•n Deploy Sau khi deploy xong th√¨ b·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c 1 ƒë∆∞·ªùng link "},{"uri":"/vi/3-accessibilitytoinstances/3.1-public-instance/","title":"C·∫•u h√¨nh cho Lambda","tags":[],"description":"","content":" Truy c·∫≠p v√†o Lambda v√† ch·ªçn function M·ªü d·ªãch v·ª• Lambda trong AWS Console.\n·ªû menu b√™n tr√°i, ch·ªçn Functions.\nT√¨m function b·∫°n ƒë√£ t·∫°o, v√≠ d·ª•: UploadFunction\nNh·∫•n v√†o t√™n function ƒë·ªÉ xem th√¥ng tin t·ªïng quan v√† c·∫•u h√¨nh. C·∫•u h√¨nh Lambda T·∫°i ƒë√¢y ch√≠nh l√† ph·∫ßn m√† b·∫°n c√≥ th·ªÉ thao t√°c c√°c d√≤ng l·ªánh code ƒë·ªÉ l·∫≠p tr√¨nh b·∫±ng ng√¥n ng·ªØ Python nh∆∞ ƒë√£ c·∫•u h√¨nh ·ªü ph·∫ßn tr∆∞·ªõc ƒë√≥: D∆∞·ªõi ƒë√¢y l√† ƒëo·∫°n code tham kh·∫£o c·ªßa Upload Function /// import json\nimport boto3\nimport base64\ns3 = boto3.client(\u0026lsquo;s3\u0026rsquo;)\nBUCKET_NAME = \u0026rsquo;ngocthanh0802'\ndef lambda_handler(event, context): try: if \u0026lsquo;queryStringParameters\u0026rsquo; not in event or \u0026lsquo;fileName\u0026rsquo; not in event[\u0026lsquo;queryStringParameters\u0026rsquo;]: return { \u0026lsquo;statusCode\u0026rsquo;: 400, \u0026lsquo;body\u0026rsquo;: json.dumps({\u0026rsquo;error\u0026rsquo;: \u0026lsquo;Missing fileName in query parameters\u0026rsquo;}) }\nfile_name = event['queryStringParameters']['fileName']\rif 'body' not in event:\rreturn {\r'statusCode': 400,\r'body': json.dumps({'error': 'Missing file content in body'})\r}\rif event.get('isBase64Encoded', False):\rfile_content = base64.b64decode(event['body'])\relse:\rfile_content = event['body'] if isinstance(event['body'], bytes) else event['body'].encode('utf-8')\rcontent_type = 'application/octet-stream'\rif file_name.lower().endswith(('.jpg', '.jpeg')):\rcontent_type = 'image/jpeg'\relif file_name.lower().endswith('.png'):\rcontent_type = 'image/png'\relif file_name.lower().endswith('.gif'):\rcontent_type = 'image/gif'\relif file_name.lower().endswith('.txt'):\rcontent_type = 'text/plain'\rs3.put_object(\rBucket=BUCKET_NAME,\rKey=file_name,\rBody=file_content,\rContentType=content_type\r)\rreturn {\r'statusCode': 200,\r'body': json.dumps({'message': f'File {file_name} uploaded successfully!'}),\r'headers': {\r'Content-Type': 'application/json'\r}\r}\rexcept Exception as e:\rreturn {\r'statusCode': 500,\r'body': json.dumps({'error': f'Error uploading file: {str(e)}'}),\r'headers': {\r'Content-Type': 'application/json'\r}\r}\r///\nSau khi nh·∫≠p v√†o trong ph·∫ßn Code Source theo c·∫•u tr√∫c tr√™n b·∫°n c√≥ th·ªÉ ti·∫øn h√†nh l∆∞u l·∫°i c√°ch thay ƒë·ªïi b·∫±ng c√°ch: B·∫•m button Deploy ho·∫∑c t·ªï h·ª£p ph√≠m (Ctrl + Shift + U) ƒê·ª£i m·ªôt v√†i gi√¢y, h·ªá th·ªëng s·∫Ω l∆∞u l·∫°i t·∫•t c·∫£ c√°c thay ƒë·ªïi c·ªßa b·∫°n v√† tr·∫£ v·ªÅ th√¥ng b√°o l∆∞u th√†nh c√¥ng 3.Ti·∫øp t·ª•c c·∫•u h√¨nh th√™m Lambda Download Function T·∫°i ƒë√¢y ch√≠nh l√† ph·∫ßn m√† b·∫°n c√≥ th·ªÉ thao t√°c c√°c d√≤ng l·ªánh code ƒë·ªÉ l·∫≠p tr√¨nh b·∫±ng ng√¥n ng·ªØ Python nh∆∞ ƒë√£ c·∫•u h√¨nh ·ªü ph·∫ßn tr∆∞·ªõc ƒë√≥: D∆∞·ªõi ƒë√¢y l√† ƒëo·∫°n code tham kh·∫£o c·ªßa Download Function\n\\\\\nimport json\nimport boto3\nimport base64\ns3 = boto3.client(\u0026lsquo;s3\u0026rsquo;) BUCKET_NAME = \u0026rsquo;ngocthanh0802\u0026rsquo;\ndef lambda_handler(event, context):\ntry:\r# Ki·ªÉm tra fileName trong query parameters\rif 'queryStringParameters' not in event or 'fileName' not in event['queryStringParameters']:\rreturn {\r'statusCode': 400,\r'body': json.dumps({'error': 'Missing fileName in query parameters'}),\r'headers': {'Content-Type': 'application/json'}\r}\rfile_name = event['queryStringParameters']['fileName']\r# L·∫•y file t·ª´ S3\rfile_obj = s3.get_object(Bucket=BUCKET_NAME, Key=file_name)\rfile_content = file_obj['Body'].read()\r# X√°c ƒë·ªãnh Content-Type d·ª±a tr√™n ph·∫ßn m·ªü r·ªông file\rcontent_type = 'application/octet-stream'\rif file_name.lower().endswith(('.jpg', '.jpeg')):\rcontent_type = 'image/jpeg'\relif file_name.lower().endswith('.png'):\rcontent_type = 'image/png'\relif file_name.lower().endswith('.gif'):\rcontent_type = 'image/gif'\rreturn {\r'statusCode': 200,\r'body': base64.b64encode(file_content).decode('utf-8'),\r'isBase64Encoded': True,\r'headers': {\r'Content-Type': content_type,\r# B·ªè Content-Disposition ƒë·ªÉ tr√¨nh duy·ªát hi·ªÉn th·ªã tr·ª±c ti·∫øp\r'Cache-Control': 'max-age=3600' # Cache h√¨nh ·∫£nh trong 1 gi·ªù\r}\r}\rexcept s3.exceptions.NoSuchKey:\rreturn {\r'statusCode': 404,\r'body': json.dumps({'error': 'File not found'}),\r'headers': {'Content-Type': 'application/json'}\r}\rexcept Exception as e:\rreturn {\r'statusCode': 500,\r'body': json.dumps({'error': f'Error retrieving file: {str(e)}'}),\r'headers': {'Content-Type': 'application/json'}\r}\r\\\\ B·∫°n ƒë√£ ho√†n th√†nh b∆∞·ªõc c·∫•u h√¨nh cho Lambda\n"},{"uri":"/vi/2-prerequiste/2.1-createec2/","title":"Chu·∫©n b·ªã ","tags":[],"description":"","content":"H∆∞·ªõng d·∫´n tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu ƒê·ªÉ n·∫Øm r√µ c√°ch t·∫°o v√† s·ª≠ d·ª•ng c√°c d·ªãch v·ª• ch√≠nh nh∆∞ S3, Lambda v√† API Gateway, b·∫°n c√≥ th·ªÉ tham kh·∫£o c√°c b√†i lab b√™n d∆∞·ªõi:\nGi·ªõi thi·ªáu v·ªÅ Amazon S3 L√†m vi·ªác v·ªõi AWS Lambda L√†m vi·ªác v·ªõi API Gateway Trong n·ªôi dung sau, ch√∫ng ta s·∫Ω th·ª±c h√†nh c√°ch tri·ªÉn khai ch·ª©c nƒÉng upload h√¨nh ·∫£nh l√™n S3 th√¥ng qua AWS Lambda v√† API Gateway, ·ª©ng d·ª•ng trong c√°c h·ªá th·ªëng l∆∞u tr·ªØ d·ªØ li·ªáu d·∫°ng serverless.\nC√°c ph·∫ßn ch√≠nh T·∫°o S3 Bucket T·∫°o Lambda Function T·∫°o REST API trong API Gateway "},{"uri":"/vi/1-introduce/","title":"Gi∆°ÃÅi thi√™Ã£u","tags":[],"description":"","content":"l AWS Identity and Access Management (IAM) l AWS Identity and Access Management (IAM), b·∫°n c√≥ th·ªÉ ch·ªâ ƒë·ªãnh nh·ªØng c√° nh√¢n c√≥ quy·ªÅn truy c·∫≠p, lo·∫°i d·ªãch v·ª• v√† t√†i nguy√™n AWS h·ªç c√≥ th·ªÉ truy c·∫≠p v√† ƒëi·ªÅu ki·ªán truy c·∫≠p. IAM l√† m·ªôt t√≠nh nƒÉng ƒë∆∞·ª£c cung c·∫•p mi·ªÖn ph√≠ c·ªßa t√†i kho·∫£n AWS.\nüîπ Amazon S3 ‚Äì D·ªãch v·ª• l∆∞u tr·ªØ ƒë·ªëi t∆∞·ª£ng linh ho·∫°t Amazon S3 (Simple Storage Service) l√† m·ªôt d·ªãch v·ª• l∆∞u tr·ªØ ƒë·ªëi t∆∞·ª£ng m·∫°nh m·∫Ω thu·ªôc n·ªÅn t·∫£ng AWS, cho ph√©p b·∫°n l∆∞u tr·ªØ v√† truy xu·∫•t b·∫•t k·ª≥ lo·∫°i d·ªØ li·ªáu n√†o ‚Äî t·ª´ h√¨nh ·∫£nh, video, t·ªáp vƒÉn b·∫£n ƒë·∫øn c√°c d·ªØ li·ªáu dung l∆∞·ª£ng l·ªõn. D·ªØ li·ªáu ƒë∆∞·ª£c t·ªï ch·ª©c trong c√°c ƒë∆°n v·ªã g·ªçi l√† \u0026ldquo;bucket\u0026rdquo;, v√† c√≥ th·ªÉ truy c·∫≠p d·ªÖ d√†ng th√¥ng qua c√°c li√™n k·∫øt URL ho·∫∑c th√¥ng qua API.\nS3 cung c·∫•p kh·∫£ nƒÉng l∆∞u tr·ªØ kh√¥ng gi·ªõi h·∫°n, v·ªõi ƒë·ªô b·ªÅn d·ªØ li·ªáu l√™n ƒë·∫øn 99.999999999% (11 s·ªë 9), ph√π h·ª£p cho c·∫£ l∆∞u tr·ªØ d√†i h·∫°n v√† c√°c ·ª©ng d·ª•ng ƒë√≤i h·ªèi ƒë·ªô tin c·∫≠y cao. Ngo√†i ra, S3 c√≤n t√≠ch h·ª£p t·ªët v·ªõi c√°c d·ªãch v·ª• kh√°c nh∆∞ AWS Lambda, CloudFront hay API Gateway, t·∫°o n√™n m·ªôt gi·∫£i ph√°p to√†n di·ªán cho c√°c h·ªá th·ªëng serverless ho·∫∑c h·ªá th·ªëng ph√¢n ph·ªëi n·ªôi dung.\nL·ª£i √≠ch n·ªïi b·∫≠t c·ªßa S3: L∆∞u tr·ªØ h√†ng tri·ªáu ƒë·∫øn h√†ng t·ª∑ ƒë·ªëi t∆∞·ª£ng m√† kh√¥ng lo gi·ªõi h·∫°n dung l∆∞·ª£ng. ƒê·∫£m b·∫£o ƒë·ªô b·ªÅn d·ªØ li·ªáu c·ª±c cao.\nM·ªói t·ªáp tin ƒë·ªÅu c√≥ th·ªÉ ƒë∆∞·ª£c truy c·∫≠p qua m·ªôt ƒë∆∞·ªùng d·∫´n duy nh·∫•t.\nH·ªó tr·ª£ ki·ªÉm so√°t truy c·∫≠p chi ti·∫øt b·∫±ng IAM, bucket policy ho·∫∑c ACL.\nD·ªÖ d√†ng t√≠ch h·ª£p v·ªõi c√°c d·ªãch v·ª• kh√°c trong AWS nh∆∞ Lambda, Athena, API Gateway,‚Ä¶\nüîπ Amazon API Gateway ‚Äì C·∫ßu n·ªëi gi·ªØa ng∆∞·ªùi d√πng v√† backend API Gateway l√† m·ªôt d·ªãch v·ª• qu·∫£n l√Ω API do AWS cung c·∫•p, cho ph√©p b·∫°n x√¢y d·ª±ng, tri·ªÉn khai v√† duy tr√¨ c√°c API RESTful ho·∫∑c HTTP ·ªü quy m√¥ l·ªõn. D·ªãch v·ª• n√†y ho·∫°t ƒë·ªông nh∆∞ m·ªôt c·ªïng trung gian gi·ªØa client (tr√¨nh duy·ªát, ·ª©ng d·ª•ng mobile\u0026hellip;) v√† backend (Lambda, EC2, ho·∫∑c c√°c d·ªãch v·ª• n·ªôi b·ªô kh√°c).\nAPI Gateway h·ªó tr·ª£ qu·∫£n l√Ω version API, gi·ªõi h·∫°n t·∫ßn su·∫•t truy c·∫≠p (rate limiting), x√°c th·ª±c ng∆∞·ªùi d√πng, ghi log chi ti·∫øt v√† b·∫£o m·∫≠t truy c·∫≠p. Nh·ªù v·∫≠y, b·∫°n c√≥ th·ªÉ d·ªÖ d√†ng tri·ªÉn khai c√°c API ·ªïn ƒë·ªãnh, b·∫£o m·∫≠t v√† c√≥ th·ªÉ m·ªü r·ªông theo nhu c·∫ßu th·ª±c t·∫ø.\nüîπ AWS Lambda ‚Äì Ch·∫°y code kh√¥ng c·∫ßn m√°y ch·ªß AWS Lambda l√† d·ªãch v·ª• ƒëi·ªán to√°n serverless cho ph√©p b·∫°n ch·∫°y m√£ m√† kh√¥ng c·∫ßn tri·ªÉn khai ho·∫∑c qu·∫£n l√Ω m√°y ch·ªß. Lambda ƒë∆∞·ª£c k√≠ch ho·∫°t b·ªüi c√°c s·ª± ki·ªán nh∆∞: c√≥ y√™u c·∫ßu t·ª´ API Gateway, m·ªôt file ƒë∆∞·ª£c upload l√™n S3, ho·∫∑c m·ªôt cron job ƒë·ªãnh k·ª≥. Khi s·ª± ki·ªán x·∫£y ra, Lambda s·∫Ω t·ª± ƒë·ªông th·ª±c thi ƒëo·∫°n m√£ m√† b·∫°n ƒë√£ ƒë·ªãnh nghƒ©a s·∫µn.\nLambda h·ªó tr·ª£ nhi·ªÅu ng√¥n ng·ªØ ph·ªï bi·∫øn nh∆∞: Node.js, Python, Java, Go,\u0026hellip; v√† r·∫•t ph√π h·ª£p ƒë·ªÉ x·ª≠ l√Ω c√°c t√°c v·ª• ng·∫Øn g·ªçn, t·ª± ƒë·ªông ho√°, ho·∫∑c l√†m ph·∫ßn backend cho c√°c ·ª©ng d·ª•ng web/mobile hi·ªán ƒë·∫°i.\nüîπT·ªïng k·∫øt Vi·ªác k·∫øt h·ª£p Amazon S3, API Gateway, v√† AWS Lambda t·∫°o th√†nh m·ªôt ki·∫øn tr√∫c serverless linh ho·∫°t, gi√∫p b·∫°n:\nL∆∞u tr·ªØ v√† ph·ª•c v·ª• d·ªØ li·ªáu hi·ªáu qu·∫£ (S3).\nX√¢y d·ª±ng c√°c API truy c·∫≠p ho·∫∑c x·ª≠ l√Ω d·ªØ li·ªáu (API Gateway).\nX·ª≠ l√Ω backend logic m√† kh√¥ng c·∫ßn qu·∫£n l√Ω h·∫° t·∫ßng (Lambda).\nƒê√¢y l√† m·ªôt gi·∫£i ph√°p t·ªëi ∆∞u cho c√°c h·ªá th·ªëng hi·ªán ƒë·∫°i nh∆∞: ·ª©ng d·ª•ng chia s·∫ª ·∫£nh, n·ªÅn t·∫£ng l∆∞u tr·ªØ ƒë√°m m√¢y, ho·∫∑c backend cho mobile/web app. Nh·ªù kh·∫£ nƒÉng m·ªü r·ªông t·ª± ƒë·ªông v√† t√≠ch h·ª£p s√¢u trong h·ªá sinh th√°i AWS, b·∫°n c√≥ th·ªÉ tri·ªÉn khai nhanh ch√≥ng, an to√†n v√† ti·∫øt ki·ªám chi ph√≠.\n"},{"uri":"/vi/2-prerequiste/2.1-createec2/2.1.1-createvpc/","title":"T·∫°o S3 Bucket ","tags":[],"description":"","content":"Kh·ªüi t·∫°o S3 Bucket d√πng ƒë·ªÉ l∆∞u tr·ªØ h√¨nh ·∫£nh v√† k·∫øt qu·∫£ Truy c·∫≠p v√†o Console v√† t√¨m d·ªãch v·ª• Amazon S3\nTruy c·∫≠p v√†o trang AWS Management Console Ti·∫øn h√†nh ƒëƒÉng nh·∫≠p t√†i kho·∫£n c·ªßa b·∫°n Sau khi ƒëƒÉng nh·∫≠p th√†nh c√¥ng th√¨ s·∫Ω chuy·ªÉn ng∆∞·ªùi d√πng ƒë·∫øn trang ch√≠nh c·ªßa AWS Manage Console nh∆∞ h√¨nh d∆∞·ªõi : T√¨m ki·∫øm S3 tr√™n thanh Search v√† ch·ªçn d·ªãch v·ª• S3 Ch·ªçn Create bucket v√† l√†m theo h∆∞·ªõng d·∫´n C·∫•u h√¨nh cho S3 T·∫°i ph·∫ßn General configuration:\nAWS Region: t√πy theo Region c·ªßa b·∫°n mu·ªën s·ª≠ d·ª•ng\nBucket type: ch·ªçn General purpose\nBucket name: my-file-sharing-bucket-amc0802 T·∫°i ph·∫ßn Object Ownership:\nCh·ªçn ACLs disable (recommended) T·∫°i ph·∫ßn Block Public Access setting for this bucket:\nB·ªè ch·ªçn Block all public access\nT√≠ch ch·ªçn I acknowledge that the current settings might result in this bucket and the objects within becoming public. "},{"uri":"/vi/2-prerequiste/","title":"CaÃÅc b∆∞∆°ÃÅc chu√¢Ãân biÃ£","tags":[],"description":"","content":"\rB·∫°n c·∫ßn t·∫°o s·∫µn 1 Linux instance thu√¥Ã£c public subnet vaÃÄ 1 Window instance thu√¥Ã£c private subnet ƒë·ªÉ th·ª±c hi·ªán b√†i th·ª±c h√†nh n√†y.\nƒê·ªÉ t√¨m hi·ªÉu c√°ch t·∫°o c√°c EC2 instance v√† VPC v·ªõi public/private subnet c√°c b·∫°n c√≥ th·ªÉ tham kh·∫£o b√†i lab :\nGi·ªõi thi·ªáu v·ªÅ Amazon EC2 L√†m vi·ªác v·ªõi Amazon VPC ƒê·ªÉ s·ª≠ d·ª•ng System Manager ƒë·ªÉ qu·∫£n l√Ω window instance n√≥i ri√™ng v√† c√°c instance n√≥i chung c·ªßa ch√∫ng ta tr√™n AWS, ta c·∫ßn ph·∫£i cung c·∫•p quy·ªÅn cho c√°c instance c·ªßa ch√∫ng ta c√≥ th·ªÉ l√†m vi·ªác v·ªõi System Manager.Trong ph·∫ßn chu·∫©n b·ªã n√†y, ch√∫ng ta c≈©ng s·∫Ω ti·∫øn h√†nh t·∫°o IAM Role ƒë·ªÉ c·∫•p quy·ªÅn cho c√°c instance c√≥ th·ªÉ l√†m vi·ªác v·ªõi System Manager.\nN√¥Ã£i dung Chu·∫©n b·ªã VPC v√† EC2 Instance TaÃ£o IAM Role "},{"uri":"/vi/3-accessibilitytoinstances/3.2-private-instance/","title":"C·∫•p quy·ªÅn cho Lambda(trong IAM Console)","tags":[],"description":"","content":"C√°ch 1: C·∫•p quy·ªÅn to√†n quy·ªÅn S3 (d·ªÖ, nhanh) Trong giao di·ªán IAM , t·∫°i thanh ch·ª©c nƒÉng b√™n tr√°i ch·ªçn Role\nB·∫°n s·∫Ω th·∫•y Role c√≥ t√™n gi·ªëng function m√¨nh v·ª´a t·∫°o\nTi·∫øn h√†nh click v√†o Role\nK·∫øt qu·∫£ nh∆∞ h√¨nh sau : Sau khi v√†o ƒë∆∞·ª£c giao di·ªán c·ªßa Role ƒë√≥:\n·ªû ph·∫ßn Permissions policies:\nTa ti·∫øn h√†nh ch·ªçn t√°c v·ª• Add permission sau ƒë√≥ ch·ªçn Attach Policies\nCh√∫ng ta s·∫Ω th·∫•y to√†n b·ªô danh s√°ch c√°c Permissions Policies\nTr√™n thanh Seacrch, ti·∫øn h√†nh t√¨m ki·∫øm AmazonS3FullAccess Ch·ªçn policies ƒë√≥ v√† ti·∫øn h√†nh Add permission "},{"uri":"/vi/2-prerequiste/2.1-createec2/2.1.2-createpublicsubnet/","title":"T·∫°o Lambda UploadFunction","tags":[],"description":"","content":"1.Tr√™n thanh t√¨m ki·∫øm, t√¨m Lambda sau ƒë√≥ ch·ªçn Lambda Sau khi truy c·∫≠p v√†o d·ªãch v·ª• th·ª±c hi·ªán Create Lambda Function Trong giao di·ªán Create function Function name : UploadFunction Runtime : ch·ªçn Python 3.9 Nh·ªØng ph·∫ßn c√≤n l·∫°i gi·ªØ nguy√™n theo c·∫•u h√¨nh m·∫∑c ƒë·ªãnh Sau ƒë√≥ nh·∫•n Create Function Sau khi ·∫•n n√∫t t·∫°o xong s·∫Ω hi·ªán l√™n d√≤ng ch·ªØ ƒë√£ t·∫°o th√†nh c√¥ng "},{"uri":"/vi/3-accessibilitytoinstances/","title":"C·∫•u h√¨nh Lambda","tags":[],"description":"","content":"C·∫•u h√¨nh quy·ªÅn truy c·∫≠p S3 cho Lambda Trong b∆∞·ªõc n√†y, ch√∫ng ta s·∫Ω c·∫•u h√¨nh Lambda Function v√† c·∫•p quy·ªÅn truy c·∫≠p Amazon S3 ƒë·ªÉ Lambda c√≥ th·ªÉ thao t√°c v·ªõi d·ªØ li·ªáu l∆∞u tr·ªØ tr√™n S3 (nh∆∞ upload, download, ho·∫∑c x√≥a file).\nVi·ªác thi·∫øt l·∫≠p ƒë√∫ng quy·ªÅn l√† r·∫•t quan tr·ªçng ƒë·ªÉ ƒë·∫£m b·∫£o Lambda ho·∫°t ƒë·ªông ·ªïn ƒë·ªãnh, an to√†n v√† ƒë√∫ng ch·ª©c nƒÉng khi th·ª±c hi·ªán c√°c thao t√°c v·ªõi bucket S3.\nC·∫•u h√¨nh Lambda C·∫•p quy·ªÅn cho Lambda "},{"uri":"/vi/2-prerequiste/2.1-createec2/2.1.3-createprivatesubnet/","title":"T·∫°o Lambda Download Function","tags":[],"description":"","content":" Sau khi truy c·∫≠p v√†o d·ªãch v·ª• th·ª±c hi·ªán Create Lambda Function Trong giao di·ªán Create function Function name : DownloadFunction Runtime : ch·ªçn Python 3.9 Nh·ªØng ph·∫ßn c√≤n l·∫°i gi·ªØ nguy√™n theo c·∫•u h√¨nh m·∫∑c ƒë·ªãnh Sau ƒë√≥ nh·∫•n Create Function Sau khi ·∫•n n√∫t t·∫°o xong s·∫Ω hi·ªán l√™n d√≤ng ch·ªØ ƒë√£ t·∫°o th√†nh c√¥ng "},{"uri":"/vi/4-s3log/","title":"C·∫•u h√¨nh API Gateway","tags":[],"description":"","content":"API Gateway l√† g√¨? Amazon API Gateway l√† d·ªãch v·ª• gi√∫p b·∫°n t·∫°o, qu·∫£n l√Ω v√† b·∫£o m·∫≠t c√°c API ƒë·ªÉ k·∫øt n·ªëi gi·ªØa client (frontend) v√† backend nh∆∞ Lambda, EC2, ho·∫∑c c√°c d·ªãch v·ª• AWS kh√°c.\nT√°c d·ª•ng:\nL√† c·ªïng giao ti·∫øp gi·ªØa ng∆∞·ªùi d√πng v√† backend\nX·ª≠ l√Ω c√°c request HTTP/RESTful\nH·ªó tr·ª£ x√°c th·ª±c, gi·ªõi h·∫°n t·ªëc ƒë·ªô (rate limiting), logging\u0026hellip;\nV√≠ d·ª•:\nB·∫°n t·∫°o m·ªôt API POST /upload-image API Gateway nh·∫≠n y√™u c·∫ßu t·ª´ client G·ª≠i ti·∫øp t·ªõi Lambda ƒë·ªÉ x·ª≠ l√Ω Lambda upload ·∫£nh l√™n S3 Tr·∫£ k·∫øt qu·∫£ l·∫°i cho client C√°c d·ªãch v·ª• th∆∞·ªùng d√πng chung:\nAWS Lambda ‚Äì X·ª≠ l√Ω logic backend\nAmazon S3 ‚Äì L∆∞u tr·ªØ file\nIAM ‚Äì C·∫•p quy·ªÅn truy c·∫≠p API\nCloudWatch ‚Äì Ghi log v√† gi√°m s√°t API\nCognito ‚Äì X√°c th·ª±c ng∆∞·ªùi d√πng n·∫øu c·∫ßn\nT√≥m l·∫°i: API Gateway gi√∫p x√¢y d·ª±ng API nhanh ch√≥ng, d·ªÖ qu·∫£n l√Ω v√† d·ªÖ t√≠ch h·ª£p v·ªõi c√°c d·ªãch v·ª• AWS ‚Äî l√† th√†nh ph·∫ßn quan tr·ªçng trong m√¥ h√¨nh serverless.\n"},{"uri":"/vi/5-portfwd/","title":"Tri·ªÉn khai tr√™n Postman","tags":[],"description":"","content":"Test API tr√™n PostMan 1.T·∫£i ·∫£nh l√™n postman\nTi·∫øp theo c√πng ti·∫øn h√†nh tr√™n PostMan\nMethod : POST URL : API v·ª´a t·∫°o Header : \u0026quot;\u0026quot; Content-Type: application/json \u0026quot;\u0026quot; Body : ƒê∆∞·ªùng link c·ªßa Post API\nSau ƒë√≥ nh·∫•n Send v√† k·∫øt qu·∫£ s·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã b√™n d∆∞·ªõi : Ki·ªÉm tra k·∫øt qu·∫£ tr√™n S3 Sai khi Post man th√¥ng b√°o upload th√†nh c√¥ng th√¨ ch√∫ng ta qua S3 ki·ªÉm tra k·∫øt qu·∫£ ·∫£nh ƒë√£ l√™n ch∆∞a Nh∆∞ trong h√¨nh ·∫£nh l√† ƒë√£ th√†nh c√¥ng V·∫≠y l√† b·∫°n ƒë√£ th·ª±c hi·ªán upload ·∫£nh l√™n S3 th√†nh c√¥ng 3.T·∫£i ·∫£nh v·ªÅ postman\nTi·∫øp theo c√πng ti·∫øn h√†nh tr√™n PostMan\nMethod : GET URL : API v·ª´a t·∫°o Header : \u0026quot;\u0026quot; Content-Type: text/plain \u0026quot;\u0026quot; Body : ƒê∆∞·ªùng link c·ªßa GET API Sau ƒë√≥ nh·∫•n Send v√† k·∫øt qu·∫£ s·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã b√™n d∆∞·ªõi : V·∫≠y l√† b·∫°n ƒë√£ th·ª±c hi·ªán download ·∫£nh l√™n S3 th√†nh c√¥ng "},{"uri":"/vi/6-cleanup/","title":"D·ªçn d·∫πp t√†i nguy√™n  ","tags":[],"description":"","content":" Truy c·∫≠p giao di·ªán qu·∫£n tr·ªã d·ªãch v·ª• S3 Click ch·ªçn S3 bucket ch√∫ng ta ƒë√£ t·∫°o cho b√†i th·ª±c h√†nh. Click Empty. ƒêi·ªÅn permanently delete, sau ƒë√≥ click Empty ƒë·ªÉ ti·∫øn h√†nh x√≥a object trong bucket. Click Exit. Sau khi x√≥a h·∫øt object trong bucket, click Delete Xo√° Lambda Tr√™n AWS Console:\nV√†o AWS Lambda.\nCh·ªçn Functions ‚Üí Ch·ªçn function b·∫°n mu·ªën x√≥a.\nNh·∫•n Actions ‚Üí Delete function.\nX√°c nh·∫≠n x√≥a. X√≥a IAM Role Tr√™n IAM:\nV√†o IAM ‚Üí Ch·ªçn Roles\nT√¨m role ƒë√£ g√°n cho Lambda.\nƒê·∫£m b·∫£o kh√¥ng d√πng ·ªü n∆°i kh√°c.\nNh·∫•n Delete. X√≥a API Gateway (REST API ho·∫∑c HTTP API) B∆∞·ªõc 1: Truy c·∫≠p API Gateway V√†o AWS Console T√¨m v√† ch·ªçn d·ªãch v·ª• API Gateway\nB∆∞·ªõc 2: Ch·ªçn lo·∫°i API Ch·ªçn tab APIs Ch·ªçn API b·∫°n mu·ªën x√≥a (v√≠ d·ª•: upload-api, MyRestAPI, v.v.)\nB∆∞·ªõc 3: X√≥a API Nh·∫•n v√†o t√™n API ƒë·ªÉ v√†o trang chi ti·∫øt Nh·∫•n Actions ‚Üí ch·ªçn Delete\nX√°c nh·∫≠n x√≥a ‚Üí API s·∫Ω b·ªã g·ª° ho√†n to√†n kh·ªèi h·ªá th·ªëng "},{"uri":"/vi/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"/vi/tags/","title":"Tags","tags":[],"description":"","content":""}]